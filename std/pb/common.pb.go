// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gitlab.finxos.com/backend/std/pb/common.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	gitlab.finxos.com/backend/std/pb/common.proto

It has these top-level messages:
	Empty
	CommonResultResp
	Author
	UserInfo
	UserSummary
	InternalUserSummary
	ContentForColumnist
	UserForColumnist
	ColumnistEntry
	UserInfomation
	LiveOperation
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CommonResultResp struct {
	Result map[string]string `protobuf:"bytes,1,rep,name=result" json:"result" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *CommonResultResp) Reset()                    { *m = CommonResultResp{} }
func (m *CommonResultResp) String() string            { return proto.CompactTextString(m) }
func (*CommonResultResp) ProtoMessage()               {}
func (*CommonResultResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CommonResultResp) GetResult() map[string]string {
	if m != nil {
		return m.Result
	}
	return nil
}

type Author struct {
	Id             int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	DisplayName    string `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name"`
	Image          string `protobuf:"bytes,3,opt,name=image" json:"image"`
	Gender         string `protobuf:"bytes,4,opt,name=gender" json:"gender"`
	Email          string `protobuf:"bytes,5,opt,name=email" json:"email"`
	Uri            string `protobuf:"bytes,9,opt,name=uri" json:"uri"`
	ArticleCount   int64  `protobuf:"varint,6,opt,name=article_count,json=articleCount" json:"article_count"`
	FollowersCount int64  `protobuf:"varint,7,opt,name=followers_count,json=followersCount" json:"followers_count"`
	IsFollowed     bool   `protobuf:"varint,8,opt,name=is_followed,json=isFollowed" json:"is_followed"`
	Introduction   string `protobuf:"bytes,10,opt,name=introduction" json:"introduction"`
}

func (m *Author) Reset()                    { *m = Author{} }
func (m *Author) String() string            { return proto.CompactTextString(m) }
func (*Author) ProtoMessage()               {}
func (*Author) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Author) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Author) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Author) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Author) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *Author) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Author) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *Author) GetArticleCount() int64 {
	if m != nil {
		return m.ArticleCount
	}
	return 0
}

func (m *Author) GetFollowersCount() int64 {
	if m != nil {
		return m.FollowersCount
	}
	return 0
}

func (m *Author) GetIsFollowed() bool {
	if m != nil {
		return m.IsFollowed
	}
	return false
}

func (m *Author) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

type UserInfo struct {
	AppType     string          `protobuf:"bytes,1,opt,name=app_type,json=appType" json:"app_type"`
	Uid         int64           `protobuf:"varint,2,opt,name=uid" json:"uid"`
	Username    string          `protobuf:"bytes,3,opt,name=username" json:"username"`
	DisplayName string          `protobuf:"bytes,4,opt,name=display_name,json=displayName" json:"display_name"`
	Avatar      string          `protobuf:"bytes,5,opt,name=avatar" json:"avatar"`
	CreatedAt   int64           `protobuf:"varint,6,opt,name=created_at,json=createdAt" json:"created_at"`
	FrozenFlag  bool            `protobuf:"varint,7,opt,name=frozen_flag,json=frozenFlag" json:"frozen_flag"`
	BannedUntil int64           `protobuf:"varint,8,opt,name=banned_until,json=bannedUntil" json:"banned_until"`
	Mobile      string          `protobuf:"bytes,9,opt,name=mobile" json:"mobile"`
	Country     string          `protobuf:"bytes,10,opt,name=country" json:"country"`
	Province    string          `protobuf:"bytes,11,opt,name=province" json:"province"`
	City        string          `protobuf:"bytes,12,opt,name=city" json:"city"`
	Info        *UserInfomation `protobuf:"bytes,13,opt,name=info" json:"info"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UserInfo) GetAppType() string {
	if m != nil {
		return m.AppType
	}
	return ""
}

func (m *UserInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *UserInfo) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *UserInfo) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *UserInfo) GetFrozenFlag() bool {
	if m != nil {
		return m.FrozenFlag
	}
	return false
}

func (m *UserInfo) GetBannedUntil() int64 {
	if m != nil {
		return m.BannedUntil
	}
	return 0
}

func (m *UserInfo) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserInfo) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *UserInfo) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *UserInfo) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *UserInfo) GetInfo() *UserInfomation {
	if m != nil {
		return m.Info
	}
	return nil
}

type UserSummary struct {
	Uid         int64  `protobuf:"varint,1,opt,name=uid" json:"uid"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name"`
	AppType     string `protobuf:"bytes,3,opt,name=app_type,json=appType" json:"app_type"`
	Image       string `protobuf:"bytes,4,opt,name=image" json:"image"`
	Uri         string `protobuf:"bytes,5,opt,name=uri" json:"uri"`
	Username    string `protobuf:"bytes,6,opt,name=username" json:"username"`
	Mobile      string `protobuf:"bytes,7,opt,name=mobile" json:"mobile"`
}

func (m *UserSummary) Reset()                    { *m = UserSummary{} }
func (m *UserSummary) String() string            { return proto.CompactTextString(m) }
func (*UserSummary) ProtoMessage()               {}
func (*UserSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserSummary) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserSummary) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *UserSummary) GetAppType() string {
	if m != nil {
		return m.AppType
	}
	return ""
}

func (m *UserSummary) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *UserSummary) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *UserSummary) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserSummary) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

type InternalUserSummary struct {
	Uid          int64    `protobuf:"varint,1,opt,name=uid" json:"uid"`
	DisplayName  string   `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name"`
	Image        string   `protobuf:"bytes,3,opt,name=image" json:"image"`
	Uri          string   `protobuf:"bytes,4,opt,name=uri" json:"uri"`
	Roles        []string `protobuf:"bytes,5,rep,name=roles" json:"roles"`
	Email        string   `protobuf:"bytes,6,opt,name=email" json:"email"`
	Introduction string   `protobuf:"bytes,7,opt,name=introduction" json:"introduction"`
}

func (m *InternalUserSummary) Reset()                    { *m = InternalUserSummary{} }
func (m *InternalUserSummary) String() string            { return proto.CompactTextString(m) }
func (*InternalUserSummary) ProtoMessage()               {}
func (*InternalUserSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *InternalUserSummary) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *InternalUserSummary) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *InternalUserSummary) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *InternalUserSummary) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *InternalUserSummary) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *InternalUserSummary) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *InternalUserSummary) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

type ContentForColumnist struct {
	ContentId          int64  `protobuf:"varint,1,opt,name=content_id,json=contentId" json:"content_id"`
	ContentType        string `protobuf:"bytes,2,opt,name=content_type,json=contentType" json:"content_type"`
	ContentTitle       string `protobuf:"bytes,3,opt,name=content_title,json=contentTitle" json:"content_title"`
	ContentShort       string `protobuf:"bytes,4,opt,name=content_short,json=contentShort" json:"content_short"`
	ContentCreatedat   int64  `protobuf:"varint,5,opt,name=content_createdat,json=contentCreatedat" json:"content_createdat"`
	ContentUri         string `protobuf:"bytes,6,opt,name=content_uri,json=contentUri" json:"content_uri"`
	ContentImageuri    string `protobuf:"bytes,7,opt,name=content_imageuri,json=contentImageuri" json:"content_imageuri"`
	CommentCount       int64  `protobuf:"varint,8,opt,name=comment_count,json=commentCount" json:"comment_count"`
	ContentDisplayTime int64  `protobuf:"varint,9,opt,name=content_display_time,json=contentDisplayTime" json:"content_display_time"`
}

func (m *ContentForColumnist) Reset()                    { *m = ContentForColumnist{} }
func (m *ContentForColumnist) String() string            { return proto.CompactTextString(m) }
func (*ContentForColumnist) ProtoMessage()               {}
func (*ContentForColumnist) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ContentForColumnist) GetContentId() int64 {
	if m != nil {
		return m.ContentId
	}
	return 0
}

func (m *ContentForColumnist) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *ContentForColumnist) GetContentTitle() string {
	if m != nil {
		return m.ContentTitle
	}
	return ""
}

func (m *ContentForColumnist) GetContentShort() string {
	if m != nil {
		return m.ContentShort
	}
	return ""
}

func (m *ContentForColumnist) GetContentCreatedat() int64 {
	if m != nil {
		return m.ContentCreatedat
	}
	return 0
}

func (m *ContentForColumnist) GetContentUri() string {
	if m != nil {
		return m.ContentUri
	}
	return ""
}

func (m *ContentForColumnist) GetContentImageuri() string {
	if m != nil {
		return m.ContentImageuri
	}
	return ""
}

func (m *ContentForColumnist) GetCommentCount() int64 {
	if m != nil {
		return m.CommentCount
	}
	return 0
}

func (m *ContentForColumnist) GetContentDisplayTime() int64 {
	if m != nil {
		return m.ContentDisplayTime
	}
	return 0
}

type UserForColumnist struct {
	UserId           int64  `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id"`
	DisplayName      string `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name"`
	Image            string `protobuf:"bytes,3,opt,name=image" json:"image"`
	Introduction     string `protobuf:"bytes,4,opt,name=introduction" json:"introduction"`
	UserUri          string `protobuf:"bytes,5,opt,name=user_uri,json=userUri" json:"user_uri"`
	FollowCount      int64  `protobuf:"varint,6,opt,name=follow_count,json=followCount" json:"follow_count"`
	IsFollowed       bool   `protobuf:"varint,7,opt,name=is_followed,json=isFollowed" json:"is_followed"`
	NewarticlesCount int64  `protobuf:"varint,8,opt,name=newarticles_count,json=newarticlesCount" json:"newarticles_count"`
	DaysReadCount    int64  `protobuf:"varint,9,opt,name=days_read_count,json=daysReadCount" json:"days_read_count"`
}

func (m *UserForColumnist) Reset()                    { *m = UserForColumnist{} }
func (m *UserForColumnist) String() string            { return proto.CompactTextString(m) }
func (*UserForColumnist) ProtoMessage()               {}
func (*UserForColumnist) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UserForColumnist) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserForColumnist) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *UserForColumnist) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *UserForColumnist) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *UserForColumnist) GetUserUri() string {
	if m != nil {
		return m.UserUri
	}
	return ""
}

func (m *UserForColumnist) GetFollowCount() int64 {
	if m != nil {
		return m.FollowCount
	}
	return 0
}

func (m *UserForColumnist) GetIsFollowed() bool {
	if m != nil {
		return m.IsFollowed
	}
	return false
}

func (m *UserForColumnist) GetNewarticlesCount() int64 {
	if m != nil {
		return m.NewarticlesCount
	}
	return 0
}

func (m *UserForColumnist) GetDaysReadCount() int64 {
	if m != nil {
		return m.DaysReadCount
	}
	return 0
}

type ColumnistEntry struct {
	Order    int64                  `protobuf:"varint,1,opt,name=order" json:"order"`
	Contents []*ContentForColumnist `protobuf:"bytes,2,rep,name=contents" json:"contents"`
	User     *UserForColumnist      `protobuf:"bytes,3,opt,name=user" json:"user"`
}

func (m *ColumnistEntry) Reset()                    { *m = ColumnistEntry{} }
func (m *ColumnistEntry) String() string            { return proto.CompactTextString(m) }
func (*ColumnistEntry) ProtoMessage()               {}
func (*ColumnistEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ColumnistEntry) GetOrder() int64 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *ColumnistEntry) GetContents() []*ContentForColumnist {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *ColumnistEntry) GetUser() *UserForColumnist {
	if m != nil {
		return m.User
	}
	return nil
}

type UserInfomation struct {
	RealName     string `protobuf:"bytes,1,opt,name=real_name,json=realName" json:"real_name"`
	Birthday     string `protobuf:"bytes,2,opt,name=birthday" json:"birthday"`
	PersonalLink string `protobuf:"bytes,3,opt,name=personal_link,json=personalLink" json:"personal_link"`
	Education    string `protobuf:"bytes,4,opt,name=education" json:"education"`
	Income       string `protobuf:"bytes,5,opt,name=income" json:"income"`
	Position     string `protobuf:"bytes,6,opt,name=position" json:"position"`
	Hobby        string `protobuf:"bytes,7,opt,name=hobby" json:"hobby"`
	Investment   string `protobuf:"bytes,8,opt,name=investment" json:"investment"`
	Introduction string `protobuf:"bytes,9,opt,name=introduction" json:"introduction"`
	Country      string `protobuf:"bytes,10,opt,name=country" json:"country"`
	Industry     string `protobuf:"bytes,11,opt,name=industry" json:"industry"`
	Gender       string `protobuf:"bytes,12,opt,name=gender" json:"gender"`
	Company      string `protobuf:"bytes,13,opt,name=company" json:"company"`
	Tel          string `protobuf:"bytes,14,opt,name=tel" json:"tel"`
	NewsLetter   string `protobuf:"bytes,15,opt,name=news_letter,json=newsLetter" json:"news_letter"`
	WitsToken    string `protobuf:"bytes,16,opt,name=wits_token,json=witsToken" json:"wits_token"`
}

func (m *UserInfomation) Reset()                    { *m = UserInfomation{} }
func (m *UserInfomation) String() string            { return proto.CompactTextString(m) }
func (*UserInfomation) ProtoMessage()               {}
func (*UserInfomation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UserInfomation) GetRealName() string {
	if m != nil {
		return m.RealName
	}
	return ""
}

func (m *UserInfomation) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *UserInfomation) GetPersonalLink() string {
	if m != nil {
		return m.PersonalLink
	}
	return ""
}

func (m *UserInfomation) GetEducation() string {
	if m != nil {
		return m.Education
	}
	return ""
}

func (m *UserInfomation) GetIncome() string {
	if m != nil {
		return m.Income
	}
	return ""
}

func (m *UserInfomation) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *UserInfomation) GetHobby() string {
	if m != nil {
		return m.Hobby
	}
	return ""
}

func (m *UserInfomation) GetInvestment() string {
	if m != nil {
		return m.Investment
	}
	return ""
}

func (m *UserInfomation) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *UserInfomation) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *UserInfomation) GetIndustry() string {
	if m != nil {
		return m.Industry
	}
	return ""
}

func (m *UserInfomation) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *UserInfomation) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *UserInfomation) GetTel() string {
	if m != nil {
		return m.Tel
	}
	return ""
}

func (m *UserInfomation) GetNewsLetter() string {
	if m != nil {
		return m.NewsLetter
	}
	return ""
}

func (m *UserInfomation) GetWitsToken() string {
	if m != nil {
		return m.WitsToken
	}
	return ""
}

type LiveOperation struct {
	Id          int64                            `protobuf:"varint,1,opt,name=id" json:"id"`
	OpId        int64                            `protobuf:"varint,15,opt,name=op_id,json=opId" json:"op_id"`
	Title       string                           `protobuf:"bytes,2,opt,name=title" json:"title"`
	Article     *LiveOperation_LiveRelateArticle `protobuf:"bytes,5,opt,name=article" json:"article"`
	Channels    []string                         `protobuf:"bytes,6,rep,name=channels" json:"channels"`
	Content     string                           `protobuf:"bytes,7,opt,name=content" json:"content"`
	ContentMore string                           `protobuf:"bytes,8,opt,name=content_more,json=contentMore" json:"content_more"`
	DisplayTime int64                            `protobuf:"varint,9,opt,name=display_time,json=displayTime" json:"display_time"`
	ImageUris   []string                         `protobuf:"bytes,10,rep,name=image_uris,json=imageUris" json:"image_uris"`
	IsFavourite bool                             `protobuf:"varint,11,opt,name=is_favourite,json=isFavourite" json:"is_favourite"`
	OpName      string                           `protobuf:"bytes,12,opt,name=op_name,json=opName" json:"op_name"`
	Score       int64                            `protobuf:"varint,13,opt,name=score" json:"score"`
	Symbols     []*LiveOperation_Symbol          `protobuf:"bytes,14,rep,name=symbols" json:"symbols"`
	Tags        []*LiveOperation_Tag             `protobuf:"bytes,17,rep,name=tags" json:"tags"`
	ContentText string                           `protobuf:"bytes,16,opt,name=content_text,json=contentText" json:"content_text"`
	Reference   string                           `protobuf:"bytes,18,opt,name=reference" json:"reference"`
}

func (m *LiveOperation) Reset()                    { *m = LiveOperation{} }
func (m *LiveOperation) String() string            { return proto.CompactTextString(m) }
func (*LiveOperation) ProtoMessage()               {}
func (*LiveOperation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *LiveOperation) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LiveOperation) GetOpId() int64 {
	if m != nil {
		return m.OpId
	}
	return 0
}

func (m *LiveOperation) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *LiveOperation) GetArticle() *LiveOperation_LiveRelateArticle {
	if m != nil {
		return m.Article
	}
	return nil
}

func (m *LiveOperation) GetChannels() []string {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *LiveOperation) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *LiveOperation) GetContentMore() string {
	if m != nil {
		return m.ContentMore
	}
	return ""
}

func (m *LiveOperation) GetDisplayTime() int64 {
	if m != nil {
		return m.DisplayTime
	}
	return 0
}

func (m *LiveOperation) GetImageUris() []string {
	if m != nil {
		return m.ImageUris
	}
	return nil
}

func (m *LiveOperation) GetIsFavourite() bool {
	if m != nil {
		return m.IsFavourite
	}
	return false
}

func (m *LiveOperation) GetOpName() string {
	if m != nil {
		return m.OpName
	}
	return ""
}

func (m *LiveOperation) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *LiveOperation) GetSymbols() []*LiveOperation_Symbol {
	if m != nil {
		return m.Symbols
	}
	return nil
}

func (m *LiveOperation) GetTags() []*LiveOperation_Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *LiveOperation) GetContentText() string {
	if m != nil {
		return m.ContentText
	}
	return ""
}

func (m *LiveOperation) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type LiveOperation_LiveRelateArticle struct {
	Id        int64    `protobuf:"varint,1,opt,name=id" json:"id"`
	ImageUri  string   `protobuf:"bytes,2,opt,name=image_uri,json=imageUri" json:"image_uri"`
	Title     string   `protobuf:"bytes,3,opt,name=title" json:"title"`
	Uri       string   `protobuf:"bytes,4,opt,name=uri" json:"uri"`
	Platforms []string `protobuf:"bytes,5,rep,name=platforms" json:"platforms"`
}

func (m *LiveOperation_LiveRelateArticle) Reset()         { *m = LiveOperation_LiveRelateArticle{} }
func (m *LiveOperation_LiveRelateArticle) String() string { return proto.CompactTextString(m) }
func (*LiveOperation_LiveRelateArticle) ProtoMessage()    {}
func (*LiveOperation_LiveRelateArticle) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10, 0}
}

func (m *LiveOperation_LiveRelateArticle) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LiveOperation_LiveRelateArticle) GetImageUri() string {
	if m != nil {
		return m.ImageUri
	}
	return ""
}

func (m *LiveOperation_LiveRelateArticle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *LiveOperation_LiveRelateArticle) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *LiveOperation_LiveRelateArticle) GetPlatforms() []string {
	if m != nil {
		return m.Platforms
	}
	return nil
}

type LiveOperation_Symbol struct {
	Key  string `protobuf:"bytes,1,opt,name=key" json:"key"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name"`
}

func (m *LiveOperation_Symbol) Reset()                    { *m = LiveOperation_Symbol{} }
func (m *LiveOperation_Symbol) String() string            { return proto.CompactTextString(m) }
func (*LiveOperation_Symbol) ProtoMessage()               {}
func (*LiveOperation_Symbol) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 1} }

func (m *LiveOperation_Symbol) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *LiveOperation_Symbol) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LiveOperation_Tag struct {
	Key  string `protobuf:"bytes,1,opt,name=key" json:"key"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name"`
}

func (m *LiveOperation_Tag) Reset()                    { *m = LiveOperation_Tag{} }
func (m *LiveOperation_Tag) String() string            { return proto.CompactTextString(m) }
func (*LiveOperation_Tag) ProtoMessage()               {}
func (*LiveOperation_Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 2} }

func (m *LiveOperation_Tag) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *LiveOperation_Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "pb.Empty")
	proto.RegisterType((*CommonResultResp)(nil), "pb.CommonResultResp")
	proto.RegisterType((*Author)(nil), "pb.Author")
	proto.RegisterType((*UserInfo)(nil), "pb.UserInfo")
	proto.RegisterType((*UserSummary)(nil), "pb.UserSummary")
	proto.RegisterType((*InternalUserSummary)(nil), "pb.InternalUserSummary")
	proto.RegisterType((*ContentForColumnist)(nil), "pb.ContentForColumnist")
	proto.RegisterType((*UserForColumnist)(nil), "pb.UserForColumnist")
	proto.RegisterType((*ColumnistEntry)(nil), "pb.ColumnistEntry")
	proto.RegisterType((*UserInfomation)(nil), "pb.UserInfomation")
	proto.RegisterType((*LiveOperation)(nil), "pb.LiveOperation")
	proto.RegisterType((*LiveOperation_LiveRelateArticle)(nil), "pb.LiveOperation.LiveRelateArticle")
	proto.RegisterType((*LiveOperation_Symbol)(nil), "pb.LiveOperation.Symbol")
	proto.RegisterType((*LiveOperation_Tag)(nil), "pb.LiveOperation.Tag")
}

func init() {
	proto.RegisterFile("gitlab.finxos.com/backend/std/pb/common.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 1406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xcd, 0x6e, 0x1c, 0x37,
	0x12, 0xc6, 0xfc, 0xcf, 0xd4, 0xe8, 0x97, 0xd6, 0xda, 0xbd, 0xb2, 0x77, 0x57, 0x1e, 0x03, 0x5e,
	0x19, 0x0e, 0x46, 0x81, 0x7c, 0xb1, 0x03, 0xe4, 0xe0, 0x28, 0x16, 0x20, 0xc0, 0x49, 0x80, 0xb6,
	0x74, 0xc9, 0x65, 0xc0, 0xe9, 0xa6, 0x46, 0x84, 0xba, 0xc9, 0x06, 0xc9, 0x1e, 0x79, 0x72, 0x4f,
	0xf2, 0x22, 0x79, 0x89, 0x00, 0x39, 0xe5, 0x19, 0xf2, 0x22, 0x39, 0x27, 0x87, 0x80, 0x45, 0xb2,
	0xa7, 0x47, 0x23, 0x04, 0x0e, 0x7c, 0xeb, 0xfa, 0x58, 0xcd, 0x66, 0x7d, 0xf5, 0x55, 0x15, 0x1b,
	0x5e, 0xcd, 0xb8, 0xc9, 0xe8, 0x74, 0x7c, 0x43, 0xb3, 0x4c, 0x9b, 0x44, 0x8c, 0x13, 0x99, 0x1f,
	0xdd, 0xe8, 0x44, 0x4c, 0x69, 0x72, 0xcd, 0x44, 0x7a, 0xc4, 0xe7, 0x54, 0x5c, 0x53, 0x6d, 0xd2,
	0xa3, 0x62, 0x7a, 0x94, 0xc8, 0x3c, 0x97, 0x62, 0x5c, 0x28, 0x69, 0x24, 0x69, 0x16, 0xd3, 0x51,
	0x0f, 0x3a, 0x6f, 0xf2, 0xc2, 0x2c, 0x46, 0x3f, 0x36, 0x60, 0xe7, 0x04, 0x57, 0x63, 0xa6, 0xcb,
	0xcc, 0xc4, 0x4c, 0x17, 0xe4, 0x25, 0x74, 0x15, 0x5a, 0x51, 0xe3, 0xa0, 0x75, 0x38, 0x3c, 0x3e,
	0x18, 0x17, 0xd3, 0xf1, 0x6d, 0xaf, 0xb1, 0x7b, 0x7c, 0x23, 0x8c, 0x5a, 0xc4, 0xde, 0x7f, 0xff,
	0x15, 0x0c, 0x6b, 0x30, 0xd9, 0x81, 0xd6, 0x35, 0x5b, 0x44, 0x8d, 0x83, 0xc6, 0xe1, 0x20, 0xb6,
	0x8f, 0x64, 0x0f, 0x3a, 0x73, 0x9a, 0x95, 0x2c, 0x6a, 0x22, 0xe6, 0x8c, 0xcf, 0x9a, 0x2f, 0x1b,
	0xa3, 0x9f, 0x9a, 0xd0, 0x7d, 0x5d, 0x9a, 0x2b, 0xa9, 0xc8, 0x16, 0x34, 0x79, 0x8a, 0x6f, 0xb5,
	0xe2, 0x26, 0x4f, 0xc9, 0x63, 0xd8, 0x48, 0xb9, 0x2e, 0x32, 0xba, 0x98, 0x08, 0x9a, 0x87, 0x77,
	0x87, 0x1e, 0xfb, 0x9a, 0xe6, 0xcc, 0xee, 0xcb, 0x73, 0x3a, 0x63, 0x51, 0xcb, 0xed, 0x8b, 0x06,
	0xb9, 0x0f, 0xdd, 0x19, 0x13, 0x29, 0x53, 0x51, 0x1b, 0x61, 0x6f, 0x59, 0x6f, 0x96, 0x53, 0x9e,
	0x45, 0x1d, 0xe7, 0x8d, 0x86, 0x3d, 0x6d, 0xa9, 0x78, 0x34, 0x70, 0xa7, 0x2d, 0x15, 0x27, 0x4f,
	0x60, 0x93, 0x2a, 0xc3, 0x93, 0x8c, 0x4d, 0x12, 0x59, 0x0a, 0x13, 0x75, 0xf1, 0x4c, 0x1b, 0x1e,
	0x3c, 0xb1, 0x18, 0xf9, 0x3f, 0x6c, 0x5f, 0xca, 0x2c, 0x93, 0x37, 0x4c, 0x69, 0xef, 0xd6, 0x43,
	0xb7, 0xad, 0x0a, 0x76, 0x8e, 0xff, 0x83, 0x21, 0xd7, 0x13, 0x0f, 0xa6, 0x51, 0xff, 0xa0, 0x71,
	0xd8, 0x8f, 0x81, 0xeb, 0x53, 0x8f, 0x90, 0x11, 0x6c, 0x70, 0x61, 0x94, 0x4c, 0xcb, 0xc4, 0x70,
	0x29, 0x22, 0xc0, 0x93, 0xac, 0x60, 0xa3, 0x3f, 0x9a, 0xd0, 0xbf, 0xd0, 0x4c, 0x9d, 0x89, 0x4b,
	0x49, 0xfe, 0x0d, 0x7d, 0x5a, 0x14, 0x13, 0xb3, 0x28, 0x98, 0x27, 0xb9, 0x47, 0x8b, 0xe2, 0x7c,
	0x51, 0x30, 0x0c, 0x86, 0xa7, 0x48, 0x55, 0x2b, 0xb6, 0x8f, 0x64, 0x1f, 0xfa, 0xa5, 0x66, 0x0a,
	0x19, 0x74, 0x2c, 0x55, 0xf6, 0x1a, 0xc3, 0xed, 0x75, 0x86, 0xef, 0x43, 0x97, 0xce, 0xa9, 0xa1,
	0xca, 0x93, 0xe6, 0x2d, 0xf2, 0x1f, 0x80, 0x44, 0x31, 0x6a, 0x58, 0x3a, 0xa1, 0x81, 0xa0, 0x81,
	0x47, 0x5e, 0x63, 0xd0, 0x97, 0x4a, 0x7e, 0xc7, 0xc4, 0xe4, 0x32, 0xa3, 0x33, 0x64, 0xa6, 0x1f,
	0x83, 0x83, 0x4e, 0x33, 0x3a, 0xb3, 0x9f, 0x9e, 0x52, 0x21, 0x58, 0x3a, 0x29, 0x85, 0xe1, 0x19,
	0xd2, 0xd2, 0x8a, 0x87, 0x0e, 0xbb, 0xb0, 0x90, 0xfd, 0x74, 0x2e, 0xa7, 0x3c, 0x63, 0x3e, 0x37,
	0xde, 0x22, 0x11, 0xf4, 0x90, 0x6f, 0xb5, 0xf0, 0x54, 0x05, 0xd3, 0xc6, 0x5a, 0x28, 0x39, 0xe7,
	0x22, 0x61, 0xd1, 0xd0, 0xc5, 0x1a, 0x6c, 0x42, 0xa0, 0x9d, 0x70, 0xb3, 0x88, 0x36, 0x10, 0xc7,
	0x67, 0xf2, 0x14, 0xda, 0x5c, 0x5c, 0xca, 0x68, 0xf3, 0xa0, 0x71, 0x38, 0x3c, 0x26, 0x56, 0xef,
	0x81, 0xe4, 0x9c, 0x5a, 0xde, 0x63, 0x5c, 0x1f, 0xfd, 0xdc, 0x80, 0xa1, 0x5d, 0x78, 0x57, 0xe6,
	0x39, 0x75, 0x02, 0x2f, 0x2b, 0xa9, 0x22, 0xcb, 0x1f, 0xa0, 0xd5, 0x7a, 0xd6, 0x5a, 0xab, 0x59,
	0xab, 0x64, 0xdc, 0xae, 0xcb, 0xd8, 0x0b, 0xb3, 0xb3, 0x14, 0x66, 0x3d, 0x97, 0xdd, 0x5b, 0xb9,
	0x5c, 0xb2, 0xd5, 0xab, 0xb3, 0x35, 0xfa, 0xb5, 0x01, 0xf7, 0xce, 0x84, 0xb1, 0x5e, 0xd9, 0x47,
	0xc7, 0x70, 0x77, 0xbd, 0xf9, 0x83, 0xb6, 0x97, 0x07, 0xdd, 0x83, 0x8e, 0x92, 0x19, 0xd3, 0x51,
	0xe7, 0xa0, 0x65, 0xfd, 0xd0, 0x58, 0xd6, 0x5f, 0xb7, 0x5e, 0x7f, 0xb7, 0xe5, 0xdf, 0xbb, 0x43,
	0xfe, 0xbf, 0x37, 0xe1, 0xde, 0x89, 0x14, 0x86, 0x09, 0x73, 0x2a, 0xd5, 0x89, 0xcc, 0xca, 0x5c,
	0x70, 0x6d, 0x50, 0x85, 0x0e, 0x9e, 0x54, 0xb1, 0x0c, 0x3c, 0x72, 0x86, 0x11, 0x85, 0x65, 0xa4,
	0xdd, 0x47, 0xe4, 0x31, 0xa4, 0xfe, 0x09, 0x6c, 0x56, 0x2e, 0xdc, 0x64, 0x21, 0xb2, 0xf0, 0xde,
	0xb9, 0xc5, 0xea, 0x4e, 0xfa, 0x4a, 0x2a, 0xe3, 0x43, 0x0d, 0x4e, 0xef, 0x2c, 0x46, 0x9e, 0xc3,
	0x6e, 0x70, 0xf2, 0x75, 0x40, 0x0d, 0x26, 0xaf, 0x15, 0xef, 0xf8, 0x85, 0x93, 0x80, 0xdb, 0xfa,
	0x08, 0xce, 0x96, 0x3a, 0x47, 0x48, 0x88, 0xe5, 0x42, 0x71, 0xf2, 0x0c, 0x76, 0xaa, 0xc8, 0x2c,
	0xc9, 0xd6, 0xcb, 0x31, 0xb3, 0x1d, 0xe2, 0xf3, 0xb0, 0x3b, 0x5d, 0x9e, 0xe3, 0x87, 0xb1, 0x0f,
	0xb9, 0x5a, 0xda, 0xf0, 0xa0, 0xeb, 0x42, 0x9f, 0xc2, 0x5e, 0xd8, 0x2f, 0x24, 0xd9, 0xf0, 0xdc,
	0x95, 0x56, 0x2b, 0x26, 0x7e, 0xed, 0x4b, 0xb7, 0x74, 0xce, 0x73, 0x36, 0xfa, 0xa5, 0x09, 0x3b,
	0x56, 0x30, 0x2b, 0x84, 0x3f, 0x80, 0x9e, 0x55, 0xdc, 0x92, 0xed, 0xae, 0x35, 0xcf, 0x3e, 0x42,
	0x3c, 0xb7, 0xd3, 0xdf, 0x5e, 0x4f, 0xbf, 0x2d, 0x1d, 0xfc, 0xea, 0xb2, 0x1c, 0xf0, 0x14, 0x96,
	0xa7, 0xc7, 0xb0, 0xe1, 0x5a, 0xeb, 0x4a, 0xab, 0x1e, 0x3a, 0xec, 0xce, 0x06, 0xdc, 0x5b, 0x6b,
	0xc0, 0xcf, 0x61, 0x57, 0xb0, 0x1b, 0xdf, 0xdd, 0xf5, 0x0a, 0x89, 0x3b, 0xb5, 0x05, 0xb7, 0xdb,
	0x53, 0xd8, 0x4e, 0xe9, 0x42, 0x4f, 0x14, 0xa3, 0xa9, 0x77, 0x75, 0x1c, 0x6e, 0x5a, 0x38, 0x66,
	0x34, 0x45, 0xbf, 0xd1, 0xf7, 0x0d, 0xd8, 0xaa, 0x78, 0x73, 0x73, 0x71, 0x0f, 0x3a, 0x52, 0xd9,
	0xb1, 0xe4, 0xa8, 0x73, 0x06, 0x79, 0x01, 0x7d, 0xcf, 0xbe, 0x8e, 0x9a, 0x38, 0x78, 0x1f, 0xb8,
	0xc1, 0xbb, 0x26, 0xf7, 0xb8, 0x72, 0x24, 0x87, 0xd0, 0xb6, 0x0c, 0x20, 0x95, 0xc3, 0xe3, 0xbd,
	0xd0, 0xb9, 0x56, 0xbc, 0xd1, 0x63, 0xf4, 0x5b, 0x0b, 0xb6, 0x56, 0x9b, 0x1a, 0x79, 0x08, 0x03,
	0xc5, 0x68, 0xe6, 0x12, 0xe5, 0x06, 0x48, 0xdf, 0x02, 0x98, 0xa5, 0x7d, 0xe8, 0x4f, 0xb9, 0x32,
	0x57, 0x29, 0x5d, 0xf8, 0x24, 0x56, 0xb6, 0x55, 0x5a, 0xc1, 0x94, 0x96, 0x82, 0x66, 0x93, 0x8c,
	0x8b, 0xeb, 0x50, 0x2c, 0x01, 0x7c, 0xcb, 0xc5, 0x35, 0x79, 0x04, 0x03, 0x96, 0x96, 0x09, 0xad,
	0x65, 0x73, 0x09, 0xd8, 0x36, 0xc5, 0x45, 0x22, 0x73, 0x16, 0xe6, 0x89, 0xb3, 0xb0, 0x75, 0x4b,
	0xcd, 0xf1, 0x25, 0xdf, 0xda, 0x82, 0x6d, 0x79, 0xbb, 0x92, 0xd3, 0xe9, 0xc2, 0x17, 0x80, 0x33,
	0xc8, 0x7f, 0x01, 0xb8, 0x98, 0x33, 0x6d, 0xac, 0xc8, 0x31, 0x5d, 0x83, 0xb8, 0x86, 0xac, 0x09,
	0x6b, 0x70, 0x87, 0xb0, 0xfe, 0x76, 0x94, 0x70, 0x91, 0x96, 0xda, 0x2e, 0xf9, 0x51, 0x12, 0xec,
	0xda, 0xfd, 0x62, 0x63, 0xe5, 0x7e, 0x81, 0xbb, 0xe5, 0x05, 0x15, 0x0b, 0x9c, 0x28, 0xb8, 0x1b,
	0x9a, 0xb6, 0x43, 0x1a, 0x96, 0x45, 0x5b, 0xae, 0x43, 0x1a, 0x96, 0x59, 0x51, 0x0a, 0x76, 0xa3,
	0x27, 0x19, 0x33, 0x86, 0xa9, 0x68, 0xdb, 0x1d, 0xdf, 0x42, 0x6f, 0x11, 0xb1, 0xad, 0xed, 0x86,
	0x1b, 0x3d, 0x31, 0xf2, 0x9a, 0x89, 0x68, 0xc7, 0xf1, 0x68, 0x91, 0x73, 0x0b, 0x8c, 0xfe, 0xec,
	0xc0, 0xe6, 0x5b, 0x3e, 0x67, 0xdf, 0x14, 0x4c, 0x39, 0x66, 0x6f, 0x5f, 0x9f, 0xee, 0x41, 0x47,
	0x16, 0xb6, 0x50, 0xb7, 0x11, 0x6a, 0xcb, 0xe2, 0x2c, 0xb5, 0x54, 0xba, 0x36, 0xe7, 0x2f, 0x62,
	0x68, 0x90, 0xcf, 0xa1, 0xe7, 0x45, 0x8e, 0x59, 0x19, 0x1e, 0x3f, 0xb1, 0x82, 0x5a, 0xd9, 0x1e,
	0xad, 0x98, 0x65, 0xd4, 0xb0, 0xd7, 0xce, 0x35, 0x0e, 0xef, 0x58, 0xae, 0x92, 0x2b, 0x3b, 0xb8,
	0x33, 0x1d, 0x75, 0xb1, 0xe1, 0x57, 0xb6, 0xe3, 0x04, 0x45, 0xeb, 0xb3, 0x17, 0xcc, 0x7a, 0x73,
	0xce, 0xa5, 0x62, 0x3e, 0x83, 0xa1, 0x2d, 0x7e, 0x25, 0xd5, 0xca, 0xfd, 0xa4, 0xd6, 0xac, 0x42,
	0x53, 0xb1, 0x5d, 0xca, 0xd2, 0x84, 0x7d, 0xc4, 0xf6, 0x06, 0x1d, 0x01, 0x7e, 0x7d, 0x80, 0xc8,
	0x85, 0xe2, 0xda, 0xee, 0x60, 0x6b, 0x9f, 0xce, 0x65, 0xa9, 0xb8, 0x71, 0xb7, 0x82, 0x7e, 0x3c,
	0xe4, 0xfa, 0x34, 0x40, 0xb6, 0xa5, 0xc9, 0xc2, 0xd5, 0x82, 0x4f, 0xa7, 0x2c, 0x42, 0xbf, 0xd2,
	0x89, 0x3d, 0xd9, 0xa6, 0x2b, 0x57, 0x34, 0xc8, 0x31, 0xf4, 0xf4, 0x22, 0x9f, 0xca, 0x4c, 0x47,
	0x5b, 0x58, 0xad, 0xd1, 0x3a, 0x57, 0xef, 0xd0, 0x21, 0x0e, 0x8e, 0xe4, 0x19, 0xb4, 0x0d, 0x9d,
	0xe9, 0x68, 0x17, 0x5f, 0xf8, 0xd7, 0xfa, 0x0b, 0xe7, 0x74, 0x16, 0xa3, 0xcb, 0xca, 0xc8, 0x62,
	0xef, 0x8d, 0x4f, 0x7c, 0x35, 0xb2, 0xd8, 0x7b, 0x63, 0x0b, 0x4c, 0xb1, 0x4b, 0xa6, 0x98, 0xbd,
	0xe6, 0x10, 0x27, 0x8c, 0x0a, 0xd8, 0xff, 0xa1, 0x01, 0xbb, 0x6b, 0xb9, 0x5a, 0x13, 0xc7, 0x43,
	0x18, 0x54, 0xb4, 0x85, 0x32, 0x0f, 0xac, 0x2d, 0x45, 0xd2, 0xaa, 0x8b, 0x64, 0x7d, 0xca, 0x3f,
	0x82, 0x41, 0x91, 0x51, 0x73, 0x29, 0x55, 0x1e, 0x26, 0xfd, 0x12, 0xd8, 0x1f, 0x43, 0xd7, 0xf1,
	0x70, 0xc7, 0xff, 0x00, 0x81, 0x76, 0x6d, 0x4a, 0xe0, 0xf3, 0xfe, 0x73, 0x68, 0x9d, 0xd3, 0xd9,
	0x87, 0x39, 0x7f, 0x31, 0xfe, 0xf6, 0x93, 0x7f, 0xf2, 0x2b, 0x34, 0xed, 0xe2, 0x4f, 0xd0, 0x8b,
	0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x0e, 0xf5, 0x1c, 0x3e, 0x41, 0x0d, 0x00, 0x00,
}
